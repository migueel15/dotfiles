#!/bin/bash
DOTFILES_DIR="$HOME/.config/dotfiles"
BIN_DIR="$DOTFILES_DIR/bin"
DISTROS="$BIN_DIR/distros"
CONFIG_DIR="$DOTFILES_DIR/config"

runModule ()
{
	local module=$1
	local BASENAME=$(basename $module)
	export FILES_DIR=$CONFIG_DIR/files/$BASENAME
	echo "Running $module"
	bash $CONFIG_DIR/modules/$module
}

clear

# Sync pacman
sudo pacman -Syy &> /dev/null

# Install gum
if ! which gum &> /dev/null; then
sudo pacman -S --noconfirm gum &> /dev/null
fi

# Welcome message
gum style --border normal --margin "1" --padding "1 2" --border-foreground 212 "Hello, there! Welcome to my $(gum style --foreground 212 'dotfiles')."
sleep 1

# Install yay

gum spin --spinner dot --title "Checking for $(gum style --foreground 212 'yay')" -- sleep 1
if ! which yay &> /dev/null; then
	gum spin --spinner dot --title "Installing $(gum style --foreground 212 'yay')" -- sudo pacman -S --noconfirm git && git clone https://aur.archlinux.org/yay.git /tmp/yay && cd /tmp/yay && makepkg -si
fi
echo -e "$(gum style --foreground 212 'yay') is already installed."
clear

# Setup bitwarden
if ! which bw &> /dev/null; then
	gum spin --spinner dot --title "Checking for $(gum style --foreground 212 'bitwarden-cli')" -- sleep 1
	yay -S --noconfirm bitwarden-cli
fi

BW_PATH=$HOME/.bw_session
if [[ ! -f $BW_PATH ]]; then
	echo "Login to $(gum style --foreground 212 'bitwarden')"
	while true; do
		BW_SESSION=$(bw login --raw)
		if [[ $? -eq 0 ]]; then
			echo "$BW_SESSION" > $BW_PATH
			export BW_SESSION
			break
		else
			echo "$(gum style --foreground 196 'Error: ') $(gum style --foreground 196 'Invalid credentials'))"
		fi
	done
fi

# Setup git

# if [ ! -f $DOTFILES_DIR/.git_configured ]; then
# 	SETGIT=$(gum choose "Yes" "No" --header "Do you want to setup git?")
# 	[[ "$SETGIT" == "Yes" ]] && $(touch $DOTFILES_DIR/.git_configured) && runModule git || echo "Skipping $(gum style --foreground 212 'git') setup"
# sleep 1 && clear
# fi

# Setup modules

REMOVED_MODULES=(git, bitwarden)
# ALL_MODULES=$(ls $CONFIG_DIR/modules)
ALL_MODULES=($(find $CONFIG_DIR/modules -maxdepth 1 -type f -exec basename {} \;))
FILTERED_MODULES=()

for module in $ALL_MODULES; do
	if [[ ! " ${REMOVED_MODULES[@]} " =~ " ${module} " ]]; then
		FILTERED_MODULES+=("$module")
	fi
done

selected_modules(){
	ruta=$1
	archivos=""
	for archivo in $(ls $1); do
		archivos+="$archivo,"
	done
	echo $archivos
}
SELECTED_MODULES=$(selected_modules $CONFIG_DIR/modules)

OPTIONS=$(gum choose ${FILTERED_MODULES[@]} --no-limit --header "Select the modules you want to install:" --selected "$SELECTED_MODULES")

for module in $OPTIONS; do
	runModule $module
done
